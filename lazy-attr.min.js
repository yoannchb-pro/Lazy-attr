window.lazyDatas={updateURL:"https://cdn.jsdelivr.net/gh/yoannchb-pro/lazy-attr@latest/lazy-attr.min.js"},window.lazy=(()=>{return{_data:window.lazyDatas,changeAnimation:(t,e,i=!1)=>{let n=t.getAttribute("lazy-reset");if(n=null!=n&&null!=n){let n=t.getAttribute("lazy-animation");if(n&&e){let e=t.getAttribute("lazy-animation-pointer");e?document.querySelectorAll(e).forEach(t=>{t.classList.remove(n)}):t.classList.remove(n),t.removeAttribute("lazy-animation")}t.setAttribute("lazy-animation",e),i&&(window.lazy()._data.observer.unobserve(t),window.lazy()._data.observer.observe(t))}else console.warn("Lazy-attr : Cannot change animation of not lazy-reset element !")},getLastVersion:()=>new Promise(async(t,e)=>{let i=window.lazyDatas.updateURL,n=await fetch(i).catch(t=>e({error:!0})),a=await n.text().catch(t=>e({error:!0})),o=a.substring(a.indexOf("version"));t({version:o=(o=o.substring(o.indexOf('"')+1)).substring(0,o.indexOf('"'))})}),parameters:["[lazy-reset]","[lazy-animation]","[lazy-animation-time]","[lazy-animation-delay]","[lazy-src]","[lazy-video]","[lazy-embed]","[lazy-animation-pointer]","[lazy-animation-function]","[lazy-animation-count]"],animations:["zoomin","zoomout","opacity","slide-left","slide-right","slide-bottom","slide-top","corner-top-left","corner-top-right","corner-bottom-left","corner-bottom-right","shake","rotate","blur","flip","flip-up"],options:{root:null,rootMargin:"0px",threshold:0},version:"1.0.6"}}),(async()=>{let t=await window.lazy().getLastVersion();if(t.error)console.error("Lazzy-attr : error while fetching to see for update !");else try{let e=t.version,i=window.lazy().version,n=e===i,a=e<i;e>i&&console.warn(`Lazzy-attr : new version ${e} available !`),n&&console.info(`Lazy-attr : you have the latest version ${i}`),a&&console.warn(`Lazzy-attr : ${e} is not a valid version !`)}catch(t){}})(),window.IntersectionObserver||(window.IntersectionObserver=class{constructor(t,e){this.callback=t,this.elements=[],this.init()}init(){const t=this,e=()=>{const e=window.scrollX,i=window.scrollY,n=[];t.elements.forEach(t=>{let a=!1,o=document.body.getBoundingClientRect(),r=t.getBoundingClientRect(),l=!1,s=!1,d=r.top-o.top,c=r.bottom-o.bottom,y=r.right-o.right,u=r.left-o.left,m=d>=i&&d<=i+window.innerHeight,b=c<=i+window.innerHeight&&c>=i,w=u>=e&&u<=e+window.innerWidth,z=y<=e+window.innerWidth&&y>=e;(m||b)&&(s=!0),(w||z)&&(l=!0),l&&s&&(a=!0),n.push({target:t,isIntersecting:a})}),this.callback(n,t)};this.listener=e,window.addEventListener("scroll",e)}observe(t){t&&(this.elements.push(t),this.listener())}unobserve(t){if(t){let e=this.elements.indexOf(t);-1!=e&&(this.elements.splice(e,1),this.listener())}}}),window.addEventListener("load",()=>{const t=t=>console.error(`[ERROR] Lazy-attr : ${t}`);let e=(e,i)=>{e.forEach(e=>{const n=e.target;if(e.isIntersecting){const e=(t,e)=>{t.style.animationPlayState=e,t.style.webkitAnimationPlayState=e},a=(t,e)=>{let i=n.getAttribute("lazy-animation-time");i&&(t.style.animationDuration=`${i}s`,t.style.webkitAnimationDuration=`${i}s`);let a=n.getAttribute("lazy-animation-delay");a&&(t.style.animationDelay=`${a}s`,t.style.webkitAnimationDelay=`${a}s`);let o=n.getAttribute("lazy-animation-count");o&&(t.style.animationIterationCount=o,t.style.webkitAnimationIterationCount=o);let r=n.getAttribute("lazy-animation-function");r&&(t.style.animationTimingFunction=r,t.style.webkitAnimationTimingFunction=r),t.classList.add(e)},o=[];let r=n.getAttribute("lazy-animation"),l=n.getAttribute("lazy-animation-pointer");if(l&&r){document.querySelectorAll(l).forEach(t=>{a(t,r),e(t,"paused"),o.push(t)})}else r&&(a(n,r),e(n,"paused"),o.push(n));const s=()=>{o.forEach(t=>{e(t,"running")}),null===n.getAttribute("lazy-reset")&&n.removeAttribute("lazy-animation")};let d=n.complete&&0!==n.naturalHeight,c=n.readyState>=0;d||c||!n.getAttribute("lazy-src")?s():(n.addEventListener("error",()=>{s(),t("cannot load url "+n.src)}),n.addEventListener("load",s));let y=n.getAttribute("lazy-video");y&&n.setAttribute("poster",y),n.preload="none";let u=n.getAttribute("lazy-embed");if(u){let t=n.getAttribute("lazy-poster");t=t?`url('${t}')`:"#000",n.setAttribute("srcdoc",`<style>body{background: ${t}; background-position: center; background-size: cover;}*{padding:0;margin:0;overflow:hidden}html,body{height:100%}img,span{position:absolute;width:100%;top:0;bottom:0;margin:auto}span{height:1.5em;text-align:center;font:48px/1.5 sans-serif;color:white;text-shadow:0 0 0.5em black}</style>\n                    <a href='${u}'><span>â–¶</span></a>`)}let m=n.getAttribute("lazy-src");m&&(n.src=m),n.removeAttribute("lazy-embed"),n.removeAttribute("lazy-poster"),n.removeAttribute("lazy-video"),n.removeAttribute("lazy-animation-time"),n.removeAttribute("lazy-src"),null===n.getAttribute("lazy-reset")&&i.unobserve(n)}else if(null!=n.getAttribute("lazy-reset")){const t=(t,e=!1)=>{e&&t.classList.remove(e)};let e=n.getAttribute("lazy-animation"),i=n.getAttribute("lazy-animation-pointer");if(i&&e){document.querySelectorAll(i).forEach(i=>{t(i,e)})}else t(n,e)}})};if(window.IntersectionObserver&&window.lazy()&&window.lazyDatas){let t=new IntersectionObserver(e,window.lazy().options);window.lazyDatas.observer=t;const i=()=>{document.body.querySelectorAll(window.lazy().parameters.join(",")).forEach(e=>{t.observe(e)})};document.addEventListener("DOMNodeInserted",i),document.addEventListener("change",i),i(),(t=>console.info(`[INFO] Lazy-attr : ${t}`))("version "+window.lazy().version)}else t("incompatible or verify window.lazy and window.lazyDatas integration")});